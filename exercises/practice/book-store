import
  std / unittest

import
  book_store

suite "book-store tests":
  test "Only a single book":
    check total(@[1]) == 800
  test "Two of the same book":
    check total(@[2, 2]) == 1600
  test "Empty basket":
    check total(newSeq[int]()) == 0
  test "Two different books":
    check total(@[1, 2]) == 1520
  test "Three different books":
    check total(@[1, 2, 3]) == 2160
  test "Four different books":
    check total(@[1, 2, 3, 4]) == 2560
  test "Five different books":
    check total(@[1, 2, 3, 4, 5]) == 3000
  test "Two groups of four is cheaper than group of five plus group of three":
    check total(@[1, 1, 2, 2, 3, 3, 4, 5]) == 5120
  test "Two groups of four is cheaper than groups of five and three":
    check total(@[1, 1, 2, 3, 4, 4, 5, 5]) == 5120
  test "Group of four plus group of two is cheaper than two groups of three":
    check total(@[1, 1, 2, 2, 3, 4]) == 4080
  test "Two each of first 4 books and 1 copy each of rest":
    check total(@[1, 1, 2, 2, 3, 3, 4, 4, 5]) == 5560
  test "Two copies of each book":
    check total(@[1, 1, 2, 2, 3, 3, 4, 4, 5, 5]) == 6000
  test "Three copies of first book and 2 each of remaining":
    check total(@[1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 1]) == 6800
  test "Three each of first 2 books and 2 each of remaining books":
    check total(@[1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 1, 2]) == 7520
  test "Four groups of four are cheaper than two groups each of five and three":
    check total(@[1, 1, 2, 2, 3, 3, 4, 5, 1, 1, 2, 2, 3, 3, 4, 5]) == 10240
  test "Check that groups of four are created properly even when there are more groups of three than groups of five":
    check total(@[1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 5,
                  5]) ==
        14560
  test "One group of one and four is cheaper than one group of two and three":
    check total(@[1, 1, 2, 3, 4]) == 3360
  test "One group of one and two plus three groups of four is cheaper than one group of each size":
    check total(@[1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5]) == 10000
